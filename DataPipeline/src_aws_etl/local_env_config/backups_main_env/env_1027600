# environment.yml
# FinSight - Financial Intelligence Platform for SEC Filings
# 
# This environment is for the data ingestion and ETL pipeline components
# 
# Usage:
#   Create environment: conda env create -f environment.yml
#   Activate: conda activate finsight
#   Update: conda env update -f environment.yml --prune
#   Remove: conda env remove -n finsight

name: finsight-venv

channels:
  - conda-forge
  - defaults

dependencies:
  # ============================================
  # Python Version
  # ============================================
  - python=3.11
  
  # ============================================
  # Package Management
  # ============================================
  - pip=25.2
  - setuptools=80.9.0
  - wheel=0.45.1
  
  # ============================================
  # Core System Libraries (handled by conda)
  # ============================================
  - openssl=3.0.*
  - ca-certificates
  
  # ============================================
  # Pip Packages
  # ============================================
  - pip:
      # ===== AWS Services =====
      - boto3==1.40.59
      - botocore==1.40.59
      - s3transfer==0.14.0
      
      # ===== Data Processing & Analysis =====
      - pandas==1.5.3
      - numpy==1.26.4
      - polars==1.34.0
      - pyarrow==22.0.0
      
      # ===== SEC EDGAR Data Collection =====
      - sec-edgar-downloader==5.0.3
      
      # ===== Web Scraping & HTML Parsing =====
      - beautifulsoup4==4.12.2
      - lxml==4.9.3
      - soupsieve==2.8
      - cssutils==2.9.0
      
      # ===== Natural Language Processing =====
      - nltk==3.9.2
      - regex==2025.10.23
      
      # ===== HTTP & Requests =====
      - requests==2.31.0
      - urllib3==1.26.20
      - certifi==2025.10.5
      - charset-normalizer==3.4.4
      - idna==3.11
      
      # ===== Configuration & Environment =====
      - python-dotenv==1.1.1
      - pyyaml==6.0.3
      
      # ===== Templating =====
      - jinja2==3.1.6
      - markupsafe==3.0.3
      
      # ===== Utilities =====
      - click==8.3.0
      - tqdm==4.66.0
      - colorama==0.4.6
      - pygments==2.19.2
      
      # ===== Parallel Processing =====
      - joblib==1.5.2
      - pathos==0.3.1
      - multiprocess==0.70.18
      - dill==0.4.0
      - pox==0.3.6
      - ppft==1.7.7
      
      # ===== Rate Limiting =====
      - pyrate-limiter==3.9.0
      
      # ===== Date/Time Handling =====
      - python-dateutil==2.9.0.post0
      - pytz==2025.2
      
      # ===== Data Serialization =====
      - xmltodict==1.0.2
      
      # ===== Testing =====
      - pytest==8.4.2
      - moto==5.1.15
      - responses==0.25.8
      - pluggy==1.6.0
      - iniconfig==2.3.0
      - tomli==2.3.0
      - exceptiongroup==1.3.0
      
      # ===== Security & Cryptography =====
      - cryptography==46.0.3
      - cffi==2.0.0
      - pycparser==2.23
      
      # ===== Web Framework (for moto testing) =====
      - werkzeug==3.1.3
      
      # ===== Miscellaneous =====
      - six==1.17.0
      - jmespath==1.0.1
      - packaging==25.0
      - typing-extensions==4.15.0





# ============================================================================
# Data Validation Pipeline Environment - SEC Filings Project
# Purpose: Great Expectations validation, S3 integration, schema validation
# Compatible with: finrag_aws_etl_env (team's environment)
# ============================================================================
#
# INSTALLATION INSTRUCTIONS:
# --------------------------
#
# STEP 0: Clean existing environments (if necessary)
#   conda deactivate
#   conda env remove -n sec_validation_env
#   conda clean --all --yes
#
# STEP 1: Install mamba first (for faster installation)
#   conda install -n base -c conda-forge mamba
#
# STEP 2: Create environment using mamba (MUCH faster)
#   mamba env create -f environment.yml
#   # OR using conda (slower):
#   conda env create -f environment.yml
#
# STEP 3: Activate environment
#   conda activate sec_validation_env
#
# STEP 4: Verify installation
#   python -c "import great_expectations, boto3, pandas; print('Setup complete!')"
#   python -c "import sys; print(f'Python: {sys.version}')"
#
# UPDATE ENVIRONMENT:
#   mamba env update -f environment.yml --prune
#
# EXPORT FOR REPRODUCIBILITY:
#   conda env export --no-builds > environment.lock.yml
#
# ============================================================================

name: sec_validation_env

channels:
  - conda-forge
  - defaults

dependencies:
  # ----- Python Version (matching team's version) -----
  - python=3.11.14
  
  # ----- Build Tools -----
  - setuptools>=69.0.0
  - pip>=24.0
  
  # ----- CRITICAL COMPATIBILITY (matching team's versions) -----
  # These MUST match for data interchange
  - pyarrow=14.0.0         # Exact match for parquet compatibility
  - numpy>=1.24.0,<2.0     # Compatible range with team
  
  # ----- AWS Core (matching team's AWS stack) -----
  - boto3>=1.35.0,<1.36
  - botocore>=1.35.0,<1.36
  - s3fs>=2024.6.0
  
  # ----- Data Processing Core (compatible with team) -----
  - pandas=2.0.3           # Your current version, compatible with team's range
  - scipy=1.11.0           # Your current version, matches team's range
  
  # ----- Configuration & Utilities (shared with team) -----
  - python-dotenv>=1.0.0
  - pyyaml>=6.0
  - click>=8.1.7
  - rich>=13.7.0
  - tabulate>=0.9.0
  
  # ----- Testing Framework (compatible versions) -----
  - pytest>=7.4.3,<9.0
  - pytest-cov>=4.1.0
  - pytest-mock>=3.12.0
  
  # ----- Monitoring & Logging -----
  - psutil>=5.9.6
  
  # ----- Visualization (for reports) -----
  - matplotlib>=3.7.3
  - seaborn>=0.13.0
  - plotly>=5.18.0
  
  # ----- Email Support -----
  # Email libraries are typically pure Python, safe for pip
  
  # ----- Progress Display -----
  - tqdm>=4.66.0
  
  # ============================================================================
  # PIP-ONLY PACKAGES
  # These packages are not available in conda-forge or have better pip versions
  # CRITICAL: Using --no-deps to prevent pip from overriding conda packages
  # ============================================================================
  - pip:
      # Great Expectations - not in conda-forge, must use pip
      - great-expectations==0.18.8
      
      # MLflow for ML tracking (if needed)
      - mlflow==2.8.0
      
      # MLflow dependencies
      - flask>=2.2.0
      - sqlalchemy>=1.4.0
      - alembic>=1.8.0
      - markdown>=3.3
      - querystring-parser>=1.2.4
      - sqlparse>=0.4.0
      - gitpython>=3.1.0
      - databricks-cli>=0.18
      - docker>=6.0.0
      - gunicorn>=20.1.0
      - cloudpickle>=2.2.0
      - packaging>=21.3
      - importlib-metadata>=6.0.0
      - protobuf>=3.20.0
      
# ============================================================================
#
# INTEGRATION NOTES:
# ------------------
#
# This environment is designed to be compatible with finrag_aws_etl_env:
#
# 1. SHARED PACKAGES (exact versions for compatibility):
#    - pyarrow=14.0.0 (CRITICAL for parquet interchange)
#    - boto3/botocore (same AWS SDK version)
#    - pandas/numpy (compatible versions)
#
# 2. YOUR SPECIFIC PACKAGES:
#    - great-expectations (validation framework)
#    - mlflow (optional, for ML tracking)
#
# 3. TO MERGE WITH TEAM'S ENVIRONMENT:
#    Simply add the pip section to their environment.yml:
#    ```yaml
#    - pip:
#        - great-expectations==0.18.8
#        - mlflow==2.8.0
#    ```
#
# 4. DATA INTERCHANGE:
#    - Use parquet format for data exchange
#    - Ensure datetime columns use same timezone (UTC recommended)
#    - Use same compression (snappy is default)
#
# ============================================================================
#
# TROUBLESHOOTING:
# ----------------
#
# "Package conflicts":
#   mamba env create -f environment.yml --no-default-packages
#
# "ImportError after installation":
#   pip install --no-deps great-expectations==0.18.8
#   pip install <missing_dependency>
#
# Check environment health:
#   conda list | grep -E "pyarrow|pandas|numpy|boto3"
#
# Test S3 connection:
#   python -c "import boto3; s3=boto3.client('s3'); print(s3.list_buckets())"
#
# ============================================================================